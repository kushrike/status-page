# Generated by Django 5.1.5 on 2025-02-06 14:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organizations", "0002_initial"),
        ("services", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="service",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="organizations.organization",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="incident",
            name="affected_services",
            field=models.ManyToManyField(to="services.service"),
        ),
        migrations.AddField(
            model_name="servicedependency",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="servicedependency",
            name="dependent_service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dependencies",
                to="services.service",
            ),
        ),
        migrations.AddField(
            model_name="servicedependency",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_items",
                to="organizations.organization",
            ),
        ),
        migrations.AddField(
            model_name="servicedependency",
            name="required_service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dependent_services",
                to="services.service",
            ),
        ),
        migrations.AddField(
            model_name="servicedependency",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="servicegroup",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="servicegroup",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_items",
                to="organizations.organization",
            ),
        ),
        migrations.AddField(
            model_name="servicegroup",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="services",
                to="services.servicegroup",
            ),
        ),
        migrations.AddField(
            model_name="servicemetric",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="servicemetric",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_items",
                to="organizations.organization",
            ),
        ),
        migrations.AddField(
            model_name="servicemetric",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metrics",
                to="services.service",
            ),
        ),
        migrations.AddField(
            model_name="servicemetric",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="servicedependency",
            unique_together={("org", "dependent_service", "required_service")},
        ),
        migrations.AlterUniqueTogether(
            name="servicegroup",
            unique_together={("org", "name")},
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["org", "status"], name="services_se_org_id_b0a39d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="service",
            unique_together={("org", "name")},
        ),
        migrations.AddIndex(
            model_name="servicemetric",
            index=models.Index(
                fields=["service", "-timestamp"], name="services_se_service_3f0dd7_idx"
            ),
        ),
    ]
